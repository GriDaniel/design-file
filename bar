<div class="flex-row">
  <div class="progress-bar-container">
    <div class="progress-bar"></div>
  </div>
  <div class="text-container">
    <div class="time"></div>
    <div class="date"></div>
  </div>
</div>

<style>
  .flex-row {
    display: flex;
    flex-direction: row;
  }

  .progress-bar-container {
    flex: 1;
    height: 5px;
    background-color: #003366;
    position: relative;
  }

  .progress-bar {
    height: 100%;
    background-color: #66ccff;
    width: 0%;
    transition: width 0.1s linear;
  }

  .text-container {
    width: 180px;
    display: flex;
    flex-direction: column;
    align-items: center;
  }

  .time, .date {
    text-align: center;
    color: black;
  }
</style>

<script>
  const maxSeconds = 3;
  let startTime = Date.now();

  function formatTime(seconds) {
    const hours = Math.floor(seconds / 3600);
    const minutes = Math.floor((seconds % 3600) / 60);
    const secs = seconds % 60;
    return `${String(hours).padStart(2, '0')}:${String(minutes).padStart(2, '0')}:${String(secs).padStart(2, '0')}`;
  }

  function updateDisplay() {
    const elapsedMs = Date.now() - startTime;
    const elapsedSeconds = Math.floor(elapsedMs / 1000) % maxSeconds;
    const currentTimeStr = formatTime(elapsedSeconds);
    const maxTimeStr = formatTime(maxSeconds);
    document.querySelector('.time').textContent = `${currentTimeStr} / ${maxTimeStr}`;

    const percentage = (elapsedMs / (maxSeconds * 1000)) * 100;
    document.querySelector('.progress-bar').style.width = percentage + '%';

    if (elapsedMs >= maxSeconds * 1000) {
      startTime = Date.now();
    }

    requestAnimationFrame(updateDisplay);
  }

  // Set initial date
  const today = new Date();
  const month = today.getMonth() + 1;
  const day = today.getDate();
  document.querySelector('.date').textContent = `${month}/${day}`;

  // Start the update loop
  updateDisplay();
</script>
