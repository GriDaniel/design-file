 :root {
    --track-width: 300px;
    --track-height: 40px;
    --bar-width: 20px;
    --bar-height: 60px; /* Taller than track */
    --triangle-width: 20px;
    --triangle-height: 50px; /* Taller than track for arrowhead feel */
    --button-size: 30px;
    --track-color: #D9D9D9;
    --bar-color: #000000;
    --text-color: #000000;
    --font-size: 14px;
    --button-margin: 30px; /* Increased from 20px to 30px for more space */
    --container-height: var(--bar-height);
        }




.slider-container {
      display: flex;
      align-items: center;
      justify-content: center;
      position: relative;
      width: 100%;
      max-width: 600px;
    }

    .left-control, .right-control {
      display: flex;
      flex-direction: column;
      align-items: center;
    }

    .arrow {
      background: none;
      border: none;
      color: blue;
      font-size: 24px;
      cursor: pointer;
      margin-bottom: 5px;
    }

    .label {
      color: blue;
    }

    .track-container {
      flex: 1;
      position: relative;
      height: 20px;
    }

    .track {
      display: flex;
      height: 100%;
      width: 100%;
      position: relative;
    }

    .left-section {
      background-color: #a9a9a9;
      height: 100%;
    }

    .right-section {
      background-color: #d3d3d3;
      height: 100%;
    }

    .handle {
      position: absolute;
      top: -5px;
      width: 10px;
      height: 30px;
      background-color: black;
      cursor: grab;
    }

    .track::before {
      content: '';
      position: absolute;
      left: -10px;
      top: 50%;
      transform: translateY(-50%);
      width: 0;
      height: 0;
      border-top: 15px solid transparent;
      border-bottom: 15px solid transparent;
      border-right: 10px solid #a9a9a9;
    }

    .track::after {
      content: '';
      position: absolute;
      right: -10px;
      top: 50%;
      transform: translateY(-50%);
      width: 0;
      height: 0;
      border-top: 15px solid transparent;
      border-bottom: 15px solid transparent;
      border-left: 10px solid #d3d3d3;
    }

    .label.speed-override {
      position: absolute;
      left: 50%;
      transform: translateX(-50%);
      bottom: -40px;
      color: blue;
    }

(function () {
    window.Slider = {
        initSlider: function () {
            console.log("Initializing slider");
            let isDragging = false;
            let currentPercentage = 0;

            const bar = document.querySelector('.slider-bar');
            const track = document.querySelector('.slider-track');
            const leftPercent = document.querySelector('.slider-percent-left');
            const rightPercent = document.querySelector('.slider-percent-right');
            const minusBtn = document.querySelector('.slider-btn.minus');
            const plusBtn = document.querySelector('.slider-btn.plus');

            if (!bar || !track || !leftPercent || !rightPercent || !minusBtn || !plusBtn) {
                console.error("One or more slider elements not found:", { bar, track, leftPercent, rightPercent, minusBtn, plusBtn });
                return;
            }

            function updatePercentage(percentage) {
                console.log("Updating percentage to:", percentage);
                currentPercentage = Math.max(0, Math.min(100, Math.round(percentage / 5) * 5));
                leftPercent.textContent = `${currentPercentage}%`;
                rightPercent.textContent = `${100 - currentPercentage}%`;
                const trackWidth = track.offsetWidth - bar.offsetWidth;
                console.log("Track width:", trackWidth);
                bar.style.left = `${(currentPercentage / 100) * trackWidth}px`;
                console.log("Bar left:", bar.style.left);
            }

            // Remove any existing listeners to prevent duplicates
            bar.removeEventListener('mousedown', handleMouseDown);
            document.removeEventListener('mouseup', handleMouseUp);
            document.removeEventListener('mousemove', handleMouseMove);
            minusBtn.removeEventListener('click', handleMinusClick);
            plusBtn.removeEventListener('click', handlePlusClick);

            function handleMouseDown(e) {
                console.log("Mousedown on bar");
                e.preventDefault();
                isDragging = true;
            }

            function handleMouseUp() {
                console.log("Mouseup");
                isDragging = false;
            }

            function handleMouseMove(e) {
                if (isDragging) {
                    console.log("Dragging");
                    const rect = track.getBoundingClientRect();
                    let newX = e.clientX - rect.left;
                    newX = Math.max(0, Math.min(newX, rect.width - bar.offsetWidth));
                    const percentage = (newX / (rect.width - bar.offsetWidth)) * 100;
                    updatePercentage(percentage);
                }
            }

            function handleMinusClick() {
                console.log("Minus button clicked");
                updatePercentage(currentPercentage - 5);
            }

            function handlePlusClick() {
                console.log("Plus button clicked");
                updatePercentage(currentPercentage + 5);
            }

            bar.addEventListener('mousedown', handleMouseDown);
            document.addEventListener('mouseup', handleMouseUp);
            document.addEventListener('mousemove', handleMouseMove);
            minusBtn.addEventListener('click', handleMinusClick);
            plusBtn.addEventListener('click', handlePlusClick);

            updatePercentage(0);
        }
    };

    // Optional: Initialize on DOM load for initial page
    document.addEventListener("DOMContentLoaded", () => {
        console.log("DOM fully loaded");
        window.Slider.initSlider();
    });
})();


<div class="slider-container">
    <div class="left-control">
      <button class="arrow left">-</button>
      <div class="label minus-five">-5%</div>
    </div>
    <div class="track-container">
      <div class="track">
        <div class="left-section"></div>
        <div class="right-section"></div>
      </div>
      <div class="handle"></div>
    </div>
    <div class="right-control">
      <button class="arrow right">+</button>
      <div class="label plus-five">+5%</div>
    </div>
    <div class="label speed-override">Speed Override</div>
  </div>
